name: Jekyll Site CI with Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JEKYLL_ENV: production
  BUNDLE_PATH: vendor/bundle
  LC_ALL: C.UTF-8
  LANG: C.UTF-8

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: jekyll/builder:4.2.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug - Show repository structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -laR
          echo "Checking required files..."
          [ -f Gemfile ] || { echo "‚ùå Error: Gemfile missing"; exit 1; }
          [ -f _config.yml ] || { echo "‚ùå Error: _config.yml missing"; exit 1; }
          echo "‚úÖ Basic structure validated"

      - name: Setup Ruby environment
        run: |
          echo "‚¨áÔ∏è Installing system dependencies..."
          sudo apt-get update -qq && sudo apt-get install -y build-essential cmake
          echo "üîÑ Updating RubyGems..."
          sudo gem update --system -N
          echo "üì¶ Installing Bundler..."
          sudo gem install bundler -v 2.4.22 -N
          echo "‚öôÔ∏è Configuring Bundler..."
          bundle config set path $BUNDLE_PATH
          bundle config set deployment true
          bundle config set clean true
          bundle config set without 'development test'

      - name: Install dependencies
        id: install
        run: |
          echo "üß© Installing dependencies..."
          if ! bundle install --jobs 4 --retry 3; then
            echo "‚ùå Dependency installation failed"
            echo "Current bundle environment:"
            bundle env
            exit 1
          fi
          echo "üìã Installed gems:"
          bundle list

      - name: Verify environment
        run: |
          echo "üîç Environment versions:"
          ruby -v
          bundle -v
          bundle exec jekyll -v
          echo "üè• Running Jekyll doctor..."
          bundle exec jekyll doctor || echo "‚ö†Ô∏è Jekyll doctor found issues (non-fatal)"

      - name: Build Jekyll site
        id: build
        run: |
          echo "üèóÔ∏è Starting Jekyll build..."
          set -eo pipefail
          mkdir -p _site
          
          # Run build and capture output
          if ! bundle exec jekyll build \
            --trace \
            --verbose \
            --config _config.yml \
            --destination ./_site \
            2>&1 | tee build.log; then
            echo "‚ùå Jekyll build failed"
            echo "=== BEGIN ERROR OUTPUT ==="
            cat build.log | grep -i error || cat build.log
            echo "=== END ERROR OUTPUT ==="
            exit 1
          fi
          
          echo "‚úÖ Build completed successfully"
          echo "üìÅ Generated files:"
          ls -la ./_site
          [ -f ./_site/index.html ] || { echo "‚ùå Error: No index.html generated"; exit 1; }

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-debug-info
          path: |
            build.log
            Gemfile.lock
            _config.yml
            ./_site/.jekyll-metadata
          retention-days: 7

      - name: Upload site artifact
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: jekyll-site
          path: ./_site
          retention-days: 7

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && needs.build.result == 'success'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: jekyll-site
          path: ./_site

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          keep_files: false
          force_orphan: true
